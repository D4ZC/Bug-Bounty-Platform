version: '3.8'

services:
  # Base de datos MongoDB
  mongodb:
    image: mongo:6.0
    container_name: bug-bounty-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: bug-bounty-platform
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./backend/scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - bug-bounty-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: bug-bounty-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/bug-bounty-platform?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      W3ID_CLIENT_ID: ${W3ID_CLIENT_ID}
      W3ID_CLIENT_SECRET: ${W3ID_CLIENT_SECRET}
      W3ID_REDIRECT_URI: ${W3ID_REDIRECT_URI}
      MENDSCAN_API_URL: ${MENDSCAN_API_URL}
      MENDSCAN_API_KEY: ${MENDSCAN_API_KEY}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      FRONTEND_URL: http://localhost:3000
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
      MAX_FILE_SIZE: 5242880
      UPLOAD_PATH: ./uploads
      RANKING_UPDATE_CRON: "0 0 */15 * * *"
      MVP_UPDATE_CRON: "0 0 1 * * *"
    ports:
      - "3001:3001"
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    depends_on:
      - mongodb
    networks:
      - bug-bounty-network

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: bug-bounty-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:3001/api
      VITE_SOCKET_URL: http://localhost:3001
      VITE_AUTH_DOMAIN: ${W3ID_CLIENT_ID}
      VITE_AUTH_CLIENT_ID: ${W3ID_CLIENT_ID}
      VITE_MENDSCAN_API_URL: ${MENDSCAN_API_URL}
      VITE_MENDSCAN_API_KEY: ${MENDSCAN_API_KEY}
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - bug-bounty-network

  # Nginx reverse proxy (opcional)
  nginx:
    image: nginx:alpine
    container_name: bug-bounty-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - bug-bounty-network

  # Redis para cache y sesiones (opcional)
  redis:
    image: redis:7-alpine
    container_name: bug-bounty-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bug-bounty-network

  # MongoDB Express (interfaz web para MongoDB)
  mongo-express:
    image: mongo-express:latest
    container_name: bug-bounty-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password123
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    networks:
      - bug-bounty-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  bug-bounty-network:
    driver: bridge 